# frozen_string_literal: true

MESSAGE = <<MARKDOWN
Changes that require review have been detected! A merge request is normally
reviewed by both a reviewer and a maintainer in its primary category (e.g.
~frontend or ~backend), and by a maintainer in all other categories.

To spread load more evenly across eligible reviewers, Danger has randomly picked
a candidate for each review slot. Feel free to override this selection if you
think someone else would be better-suited, or the chosen person is unavailable.

Once you've decided who will review this merge request, mention them as you
normally would! Danger does not (yet?) automatically notify them for you.

| Category | Reviewer | Maintainer |
| -------- | -------- | ---------- |
MARKDOWN

def markdown_name(teammate)
  return nil unless teammate

  "#{teammate.name} (`@#{teammate.gitlab}`)"
end

def spin_the_wheel(team, project, category)
  reviewers = team.select { |member| member.reviewer?(project, category) }
  maintainers = team.select { |member| member.maintainer?(project, category) }

  # TODO: filter out people who are currently not in the office
  # TODO: take CODEOWNERS into account?
  # TODO: take OOO into account

  reviewer = reviewers[rand(reviewers.size)]
  maintainer = maintainers[rand(maintainers.size)]

  "| #{category.capitalize} | #{markdown_name(reviewer)} | #{markdown_name(maintainer)} |"
end

changes = helper.changes_by_category
categories = changes.keys - [:unknown]

unless categories.empty?
  team = helper.project_team
  table = categories.map { |category| spin_the_wheel(team, helper.project_name, category) }
  markdown(MESSAGE + table.join("\n"))
end
